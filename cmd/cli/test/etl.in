// RUN k8s
curl https://raw.githubusercontent.com/NVIDIA/ais-etl/main/transformers/hello_world/pod.yaml -o /tmp/e2e.hello_world_init_spec.yaml -s // IGNORE
ais etl init spec --spec="/tmp/e2e.hello_world_init_spec.yaml" --comm-type="hpush://" --name=$ETL_NAME-1 // IGNORE
ais etl show | grep $ETL_NAME-1 | awk '{print $2}'
ais etl init spec --spec="/tmp/e2e.hello_world_init_spec.yaml" --comm-type="hpush://" --name=$ETL_NAME-2 // IGNORE
ais etl show | grep $ETL_NAME-2 | awk '{print $2}'
ais etl init --spec="/tmp/e2e.hello_world_init_spec.yaml" --comm-type="hpush://" --name=$ETL_NAME-main // IGNORE
ais etl show | grep $ETL_NAME-main | awk '{print $2}'

# Test URL support for --spec flag (new functionality)
ais etl init spec --spec="https://raw.githubusercontent.com/NVIDIA/ais-etl/main/transformers/hash_with_args/pod.yaml" --comm-type="hpush://" --name=$ETL_NAME-url // IGNORE
ais etl show | grep $ETL_NAME-url | awk '{print $2}'

curl https://raw.githubusercontent.com/NVIDIA/ais-etl/main/transformers/hash_with_args/pod.yaml -o /tmp/e2e.hash_with_args_init_spec.yaml -s // IGNORE
ais etl init spec -f="/tmp/e2e.hash_with_args_init_spec.yaml" --comm-type="hpush://" --name=$ETL_NAME-3 // IGNORE
ais etl show | grep $ETL_NAME-3 | awk '{print $2}'
rm -f /tmp/e2e.hash_with_args_init_spec.yaml // IGNORE

echo "0123456789" > $OBJECT_1.txt
ais bucket create ais://$BUCKET_1 | awk '{print $1 " " $2}'
ais object put $OBJECT_1.txt ais://$BUCKET_1/object_1.txt
rm -f $OBJECT_1.txt // IGNORE

ais etl show $ETL_NAME-1 | grep -m1 "communication_type"
ais etl object $ETL_NAME-1 ais://$BUCKET_1/object_1.txt -
ais etl stop $ETL_NAME-1
ais etl show | grep $ETL_NAME-1 | awk '{print $2}'
ais etl start $ETL_NAME-1
ais etl object $ETL_NAME-1 ais://$BUCKET_1/object_1.txt -
! ais etl object $ETL_NAME-1 ais://$BUCKET_1/object_2.txt - // IGNORE
ais etl show errors $ETL_NAME-1 -H | awk {'print $1'}
ais etl stop $ETL_NAME-1
ais etl rm $ETL_NAME-1

ais etl show $ETL_NAME-2 | grep -m1 "communication_type"
ais etl object $ETL_NAME-2 ais://$BUCKET_1/object_1.txt -
ais etl stop $ETL_NAME-2
ais etl rm $ETL_NAME-2

# Test URL-loaded ETL
ais etl show $ETL_NAME-url | grep -m1 "communication_type"
ais etl object $ETL_NAME-url ais://$BUCKET_1/object_1.txt - --args=url-test
ais etl stop $ETL_NAME-url
ais etl rm $ETL_NAME-url

ais etl show $ETL_NAME-3 | grep -m1 "communication_type"


# Test etl object cp (copy with transformation)
ais bucket create ais://$BUCKET_2 // IGNORE
ais etl object $ETL_NAME-3 cp ais://$BUCKET_1/object_1.txt ais://$BUCKET_2/transformed_object.txt
ais etl object $ETL_NAME-3 cp ais://$BUCKET_1/object_1.txt ais://$BUCKET_2
ais bucket rm ais://$BUCKET_2 --yes // IGNORE

ais etl object $ETL_NAME-3 ais://$BUCKET_1/object_1.txt - --args=123
ais etl object $ETL_NAME-3 ais://$BUCKET_1/object_1.txt - --args=456

ais etl stop $ETL_NAME-3
ais etl rm $ETL_NAME-3
ais etl stop $ETL_NAME-main
ais etl rm $ETL_NAME-main

# Test etl rm with multiple ETL names
ais etl init spec --spec="/tmp/e2e.hello_world_init_spec.yaml" --comm-type="hpush://" --name=$ETL_NAME-multi1 // IGNORE
ais etl init spec --spec="/tmp/e2e.hello_world_init_spec.yaml" --comm-type="hpush://" --name=$ETL_NAME-multi2 // IGNORE
ais etl show | grep $ETL_NAME-multi1 | awk '{print $2}'
ais etl show | grep $ETL_NAME-multi2 | awk '{print $2}'
ais etl rm $ETL_NAME-multi1 $ETL_NAME-multi2
! ais etl show | grep "$ETL_NAME-multi"

# Test etl rm --all and initializing multiple ETLs per file
ais etl init spec --spec="/tmp/e2e.hello_world_init_spec.yaml" --name=$ETL_NAME-all1 // IGNORE
ais etl init spec --spec="/tmp/e2e.hello_world_init_spec.yaml" --name=$ETL_NAME-all2 // IGNORE
ais etl show | grep $ETL_NAME-all1 | awk '{print $2}'
ais etl show | grep $ETL_NAME-all2 | awk '{print $2}'
ais etl rm --all
! ais etl show | grep "$ETL_NAME-all"
rm -f /tmp/e2e.hello_world_init_spec.yaml // IGNORE
